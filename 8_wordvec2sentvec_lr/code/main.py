__author__ = 'luoshalin'

from gen_sentvec import gen_sentvec_file
from lr import lr
import sys


def main(argv):
    param_fpath = sys.argv[1]
    param_dic = dict()
    with open(param_fpath) as f:
        line = f.readline().strip()
        while line != '':
            param_dic[line.split('=')[0].strip()] = line.split('=')[1].strip()
            line = f.readline().strip()
    gen_method = param_dic['gen_method']
    corpus_word_path = param_dic['corpus_word_path']
    corpus_word_vector_path = param_dic['corpus_word_vector_path']
    utt_path_list = param_dic['utt_path_list'].split()
    output_fpath_list = param_dic['output_fpath_list'].split()

    task_cat_path = param_dic['task_cat_path']
    nontask_cat_path = param_dic['nontask_cat_path']



    # # ----- / STEP1: generate sentence vector & save to file / ----- #
    # # PARAM: sentence generation method: [mean | inner_prd]
    # gen_method = 'mean'
    # # gen_method = 'inner_prd'
    # # PARAM: server generated corpus word & word vector file paths
    # corpus_word_path = '../data/task_nontask_chat/ch2v_word_list'
    # corpus_word_vector_path = '../data/task_nontask_chat/ch2v_vector_list'
    # # PARAM: generate sentence vectors for task-correct dataset; task-error dataset; nontask-correct dataset, nontask-error dataset, chat dataset
    # task_utt_path_list = ['../data/utterances/task/task-correct.csv', '../data/utterances/task/task-error.csv', '../data/utterances/nontask/nontask-correct.csv', '../data/utterances/nontask/nontask-error.csv', '../data/chat/chatbot.txt']
    # output_fpath_list = ['../output/task_correct_sentence_vector_list', '../output/task_error_sentence_vector_list', '../output/nontask_correct_sentence_vector_list', '../output/nontask_error_sentence_vector_list', '../output/chat_sentence_vector_list']



    # generate sentence vector file
    for task_utt_fpath, output_fpath in zip(utt_path_list, output_fpath_list):
        gen_sentvec_file(corpus_word_path, corpus_word_vector_path, task_utt_fpath, output_fpath, gen_method)

    print '# Sentence vector generated #'
    # ----- / STEP2: run logistic regression / ----- #
    # PARAM
    # each line in category file corresponding to each line in vector file
    # category paths


    # task_cat_path = '../data/utterances/task/task-category.csv'
    # nontask_cat_path = '../data/utterances/nontask/nontask-category.csv'

    # vector paths - the files generated by gen_sentvec.py
    senvec_fpath_dic = dict()
    senvec_fpath_dic['task_correct_vector_fpath'] = output_fpath_list[0]
    senvec_fpath_dic['task_error_vector_fpath'] = output_fpath_list[1]
    senvec_fpath_dic['nontask_correct_vector_fpath'] = output_fpath_list[2]
    senvec_fpath_dic['nontask_error_vector_fpath'] = output_fpath_list[3]
    senvec_fpath_dic['chat_vector_fpath'] = output_fpath_list[4]

    print 'LR result for correct dataset:'
    lr(task_cat_path, nontask_cat_path, senvec_fpath_dic['task_correct_vector_fpath'], senvec_fpath_dic['nontask_correct_vector_fpath'], senvec_fpath_dic['chat_vector_fpath'])
    print 'LR result for error dataset:'
    lr(task_cat_path, nontask_cat_path, senvec_fpath_dic['task_error_vector_fpath'], senvec_fpath_dic['nontask_error_vector_fpath'], senvec_fpath_dic['chat_vector_fpath'])


if __name__ == '__main__':
    main(sys.argv)